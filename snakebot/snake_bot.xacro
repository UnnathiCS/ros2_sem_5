<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="snake">
    
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/snake_bot</robotNamespace>
        </plugin>
    </gazebo>
    <!-- MACROS -->
    <xacro:property name="segment_radius" value="0.03"/>
    <xacro:property name="segment_length" value="0.07"/>
    <xacro:property name="segment_mass" value="0.5"/>
    <xacro:macro name="body_link" params="base_name parent_name colour">
        
        <link name="${base_name}_aux">
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${segment_mass}"/>
                <inertia ixx="0.00025" ixy="0.0" ixz="0.0" iyy="0.00025" iyz="0.0" izz="0.000125"/>
            </inertial>
            <collision>
                <geometry>
                    <cylinder radius="${segment_radius}" length="${segment_length}"/>
                </geometry>
            </collision>
            <visual>
                <geometry>
                    <cylinder radius="${segment_radius}" length="${segment_length}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="0 1.57 0"/>
            </visual>
    	</link>
    	
    	<gazebo reference="${base_name}_aux">
            <kp>1000000000.0</kp>
            <kd>1000000000.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
            <material>Gazebo/Black</material>
            <self_collide>1</self_collide>
        </gazebo>
    	
    	
        <link name="${base_name}">
     	    <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${segment_mass}"/>
            <inertia ixx="0.00025" ixy="0.0" ixz="0.0" iyy="0.00025" iyz="0.0" izz="0.000125"/>
        </inertial>
        <collision>
            <geometry>
                <cylinder radius="${segment_radius}" length="${segment_length}"/>
            </geometry>
        </collision>
        <visual>
            <geometry>
                <cylinder radius="${segment_radius}" length="${segment_length}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 1.57 0"/>
        </visual>
    	</link>
    	
    	<gazebo reference="${base_name}">
            <kp>1000000000.0</kp>
            <kd>1000000000.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
            <material>Gazebo/${colour}</material>
            <self_collide>1</self_collide>
        </gazebo>
        
        <!-- We add to the Origin displacement a margin for flex due to self colisions for parent_name and base_name-->
        <joint name="${base_name}_aux_joint" type="revolute">
    <parent link="${parent_name}"/>
    <child link="${base_name}_aux"/>
    <origin xyz="${segment_length} 0 0" rpy="0 0 0"/>
    <limit lower="-2.0" upper="2.0" effort="100.0" velocity="1.0"/>
    <axis xyz="0 0 1"/>
</joint>
    	
       <joint name="${base_name}_joint" type="revolute">
    <parent link="${base_name}_aux"/>
    <child link="${base_name}"/>
    <origin xyz="${segment_length} 0 0" rpy="0 0 0"/>
    <limit lower="-2.0" upper="2.0" effort="100.0" velocity="1.0"/>
    <axis xyz="0 1 0"/>
</joint>
    	
    	
	    <transmission name="tran${base_name}_aux">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${base_name}_aux_joint">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor${base_name}_aux">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
        
        <transmission name="tran${base_name}">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${base_name}_joint">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor${base_name}">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    	
    </xacro:macro>
	<!-- * * * Link Definitions * * * -->
	
	

    <link name="base_link">
 	    <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="1.0" />
            <inertia ixx="0.00025" ixy="0.0" ixz="0.0" iyy="0.00025" iyz="0.0" izz="0.000125"/>
        </inertial>
        <collision>
            <geometry>
                <cylinder radius="${segment_radius}" length="${segment_length}"/>
            </geometry>
        </collision>
        <visual>
            <geometry>
                <cylinder radius="${segment_radius}" length="${segment_length}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 1.57 0"/>
            <material name="blue">
                <color rgba="0.0 0.0 1.0 1.0"/>
            </material>
        </visual>
	</link>


    <gazebo reference="base_link">
        <kp>100000000000000.0</kp>
        <kd>100000000000000.0</kd>
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/Green</material>
        <self_collide>1</self_collide>
    </gazebo>


    <joint name="camera_joint" type="fixed">
        <parent link="snake_body_7"/>
        <child link="camera_link"/>
        <origin xyz="0 0 0.05" rpy="0 0 0"/>
    </joint>

    <link name="camera_link">
        <visual>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material>
                <color rgba="1.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>

    <gazebo reference="camera_link">
        <sensor name="snake_cam" type="camera">
            <always_on>true</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
            <camera>
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <camera_name>snake_cam</camera_name>
                <image_topic_name>image_raw</image_topic_name>
                <camera_info_topic_name>camera_info</camera_info_topic_name>
                <frame_name>camera_link</frame_name>
                <robot_namespace>/snake_bot</robot_namespace>
            </plugin>
        </sensor>
    </gazebo>
    
    <!-- Camera for base_link -->
    <joint name="base_camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_camera_link"/>
        <origin xyz="0 0 0.05" rpy="0 3.14159 0"/>
    </joint>

    <link name="base_camera_link">
        <visual>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material>
                <color rgba="0.0 1.0 0.0 1.0"/>
            </material>
            <origin xyz="0 0 0" rpy="0 3.14159 0"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 3.14159 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>

    <gazebo reference="base_camera_link">
        <sensor name="base_snake_cam" type="camera">
            <always_on>true</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
            <camera>
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
            </camera>
            <plugin name="base_camera_controller" filename="libgazebo_ros_camera.so">
                <camera_name>base_snake_cam</camera_name>
                <image_topic_name>base_image_raw</image_topic_name>
                <camera_info_topic_name>base_camera_info</camera_info_topic_name>
                <frame_name>base_camera_link</frame_name>
                <robot_namespace>/snake_bot</robot_namespace>
            </plugin>
        </sensor>
    </gazebo>
    


    
    <xacro:body_link base_name="snake_body_1" parent_name="base_link" colour="Blue"/>
    <xacro:body_link base_name="snake_body_2" parent_name="snake_body_1" colour="Red"/>
    <xacro:body_link base_name="snake_body_3" parent_name="snake_body_2" colour="Purple"/>
    <xacro:body_link base_name="snake_body_4" parent_name="snake_body_3" colour="White"/>
    <xacro:body_link base_name="snake_body_5" parent_name="snake_body_4" colour="Yellow"/>
    <xacro:body_link base_name="snake_body_6" parent_name="snake_body_5" colour="Turquoise"/>
    <xacro:body_link base_name="snake_body_7" parent_name="snake_body_6" colour="Grey"/>
    
<!-- LIDAR JOINT -->
<joint name="lidar_joint" type="fixed">
  <parent link="snake_body_7"/>
  <child link="lidar_link"/>
  <origin xyz="0 0 0.1" rpy="0 0 0"/>
</joint>

<!-- LIDAR LINK -->
<link name="lidar_link">
  <visual>
    <geometry>
      <cylinder radius="0.03" length="0.02"/>
    </geometry>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <material>
      <color rgba="1.0 1.0 0.0 1.0"/>
    </material>
  </visual>
  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <cylinder radius="0.03" length="0.02"/>
    </geometry>
  </collision>
</link>

<gazebo reference="lidar_link">
  <sensor name="snake_lidar" type="ray">
    <pose>0 0 0 0 0 0</pose>
    <visualize>true</visualize>
    <update_rate>20</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>720</samples>
          <resolution>1</resolution>
          <min_angle>-1.5708</min_angle>
          <max_angle>1.5708</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.12</min>
        <max>2.0</max> <!-- decreased from 5.0 to 2.0 -->
        <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_laser.so">
      <topicName>scan</topicName>
      <frameName>lidar_link</frameName>
      <robotNamespace>/snake_bot</robotNamespace>
    </plugin>
  </sensor>
</gazebo>
</robot>